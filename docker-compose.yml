version: "3.9"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8080:8080"
    restart: always
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181

  client-api:
    build:
      context: ./client-api
      dockerfile: Dockerfile
      target: base
    volumes:
      - ./client-api/src:/home/node/app/src
      - ./client-api/nodemon.json:/home/node/app/nodemon.json
      - ./client-api/node_modules:/home/node/app/node_modules
    expose:
      - "4000"
    ports:
      - "4000:4000"
    command: npm run dev
    environment:
      PORT: 4000

  core:
    build:
      context: ./core
      dockerfile: Dockerfile
      target: base
    volumes:
      - ./core/src:/home/node/app/src
      - ./core/nodemon.json:/home/node/app/nodemon.json
      - ./core/node_modules:/home/node/app/node_modules
    expose:
      - "8081"
    ports:
      - "8081:8081"
    command: npm run dev
    environment:
      PORT: 8081
    depends_on:
      - core-db

  core-db:
    image: postgres:14
    ports:
      - "5432:5432"
    volumes:
      - ./core-db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: core
      POSTGRES_DB: core

  eats365:
    build:
      context: ./eats365
      dockerfile: Dockerfile
      target: base
    volumes:
      - ./eats365/src:/home/node/app/src
      - ./eats365/nodemon.json:/home/node/app/nodemon.json
      - ./eats365/node_modules:/home/node/app/node_modules
    expose:
      - "8082"
    ports:
      - "8082:8082"
    command: npm run dev
    environment:
      PORT: 8082
    depends_on:
      - eats365-db

  eats365-db:
    image: postgres:14
    ports:
      - "5433:5432"
    volumes:
      - ./eats365-db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: eats365
      POSTGRES_DB: eats365
